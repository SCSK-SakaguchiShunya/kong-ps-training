name: scan-kong-gateway

on:
  workflow_dispatch:
    inputs:
      tags:
        description: "スキャンするタグ (カンマ区切り, 例: 3.10,3.11)"
        required: false
        default: "3.11"
      severity_cutoff:
        description: "Trivy の失敗閾値 (例: HIGH,CRITICAL)"
        required: false
        default: "HIGH,CRITICAL"

env:
  BASE_IMAGE_REPO: kong/kong-gateway
  TRIVY_CACHE_DIR: .trivycache
  AWS_REGION: ap-northeast-1
  ECR_REPOSITORY: kong-gateway-mirror

permissions:
  contents: read
  security-events: write
  id-token: write

jobs:
  trivy-scan:
    name: Trivy Scan + Mirror
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Normalize tags input
        id: tags
        run: |
          INPUT="${{ github.event.inputs.tags || '3.11' }}"
          LIST=$(echo "$INPUT" | tr ',' '\n' | sed 's/ //g' | grep -v '^$' | sort -u | paste -sd ' ')
          echo "TAGS=$LIST" >> $GITHUB_ENV
          echo "Normalized tags: $LIST"

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Ensure ECR Repository
        run: |
          aws ecr describe-repositories --repository-names "$ECR_REPOSITORY" >/dev/null 2>&1 || \
            aws ecr create-repository --repository-name "$ECR_REPOSITORY" \
              --image-scanning-configuration scanOnPush=true \
              --encryption-configuration encryptionType=AES256

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Scan & Mirror loop
        id: loop
        env:
          SEVERITY: ${{ github.event.inputs.severity_cutoff || 'HIGH,CRITICAL' }}
        run: |
          set -euo pipefail
          mkdir -p artifacts
          SUMMARY_FILE=scan-summary.txt
          touch "$SUMMARY_FILE"
          for tag in $TAGS; do
            echo "--- Processing tag: $tag ---" | tee -a "$SUMMARY_FILE"
            docker pull ${BASE_IMAGE_REPO}:$tag
            # Trivy cache key (best effort)
            echo "Scanning ${BASE_IMAGE_REPO}:$tag"
            trivy image --ignore-unfixed --severity "$SEVERITY" --exit-code 1 \
              --vuln-type os,library --cache-dir $TRIVY_CACHE_DIR ${BASE_IMAGE_REPO}:$tag | tee trivy-$tag.txt
            # If exited non‑zero, script stops (set -e)
            echo "Generating full SARIF for $tag" | tee -a "$SUMMARY_FILE"
            trivy image --ignore-unfixed --format sarif --output trivy-$tag.sarif \
              --vuln-type os,library --severity UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL \
              --cache-dir $TRIVY_CACHE_DIR ${BASE_IMAGE_REPO}:$tag
            # Mirror to ECR
            DST=${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$tag
            docker tag ${BASE_IMAGE_REPO}:$tag $DST
            docker push $DST
            DIGEST=$(aws ecr describe-images --repository-name $ECR_REPOSITORY --image-ids imageTag=$tag --query 'imageDetails[0].imageDigest' --output text)
            echo "Tag $tag digest $DIGEST" | tee -a "$SUMMARY_FILE"
            cat > artifacts/values-image-$tag.yaml <<EOF
image:
  repository: ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY
  tag: "$tag"
  digest: "$DIGEST"
  pullPolicy: IfNotPresent
EOF
          done
          echo "ALL_TAGS=($TAGS)" >> $GITHUB_OUTPUT

      - name: Upload SARIFs
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-3.11.sarif
        continue-on-error: true

      - name: Upload values artifacts (bundle)
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: values-images
          path: artifacts/

      - name: Summary
        if: always()
        run: |
          echo "Processed tags: $TAGS" >> $GITHUB_STEP_SUMMARY
          if [ -f scan-summary.txt ]; then
            echo '--- Scan Digest Summary ---' >> $GITHUB_STEP_SUMMARY
            sed 's/^/  /' scan-summary.txt >> $GITHUB_STEP_SUMMARY
          fi
